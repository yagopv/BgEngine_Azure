<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="dotless" type="dotless.Core.configuration.DotlessConfigurationSectionHandler, dotless.Core" />
    <section name="combres" type="Combres.ConfigSectionSetting, Combres, Version=2.2, Culture=neutral, PublicKeyToken=1ca6b37997dd7536" />
    <!--<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821" />-->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>
  <connectionStrings>
    <add name="BlogUnitOfWork" connectionString="data source=.\SQLEXPRESS;database=BgEngine;AttachDBFilename=|DataDirectory|\BgEngine.mdf;Integrated Security=SSPI;User Instance=True" providerName="System.Data.SqlClient" />
    <!--<add name="BlogUnitOfWork" connectionString="data source=|DataDirectory|\BgEngine.sdf" providerName="System.Data.SqlServerCe.4.0" />-->
  </connectionStrings>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0" />
      <!--<add name="Microsoft SQL Server Compact Data Provider 4.0" invariant="System.Data.SqlServerCe.4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />-->
      <add name="System.Data.SqlServerCe.4.0" invariant="System.Data.SqlServerCe.4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    </DbProviderFactories>
  </system.data>
  <appSettings>
    <add key="webpages:Version" value="1.0.0.0" />
    <!-- When client validation enabled and unobtrusive validation as well we can expect to see the error message before send the form to server -->
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  <system.web>
    <!-- When custom errors off then we can expect error windows from browser with the detailed information about the exception -->
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="Microsoft.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!-- Send to this View when not authorized. timeout set in minutes -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" slidingExpiration="true" timeout="2880" />
    </authentication>
    <!-- Session state duration of 30 min. The mode is set up to StateServer for shared hosting. for dedicated server could be set up to InProc -->
    <sessionState mode="InProc" timeout="30" />
    <!-- Important!! -->
    <machineKey validationKey="D6435A2F217491AD335E970468CDD3F50E026A64EC49ED9ECAE5D54E5116E568F753BA3F3E20E6AACC244FCD335B6555A0E9DEFCA0DFA9FC96F2477A79B71ACF" decryptionKey="D50CA791CBD0BF170AFB047FD534B79D77A0748497A7A30DF41FDBC0C95D0A3F" validation="SHA1" decryption="AES" />
    <!-- Specify the Membership provider -->
    <membership defaultProvider="CodeFirstMembershipProvider">
      <providers>
        <clear />
        <add name="CodeFirstMembershipProvider" type="BgEngine.Infraestructure.Security.CodeFirstMembershipProvider" connectionStringName="BlogUnitOfWork" applicationName="/" />
      </providers>
    </membership>
    <profile enabled="false">
      <providers>
        <clear />
      </providers>
    </profile>
    <!-- Specify the Role Provider -->
    <roleManager enabled="true" defaultProvider="CodeFirstRoleProvider">
      <providers>
        <clear />
        <add name="CodeFirstRoleProvider" type="BgEngine.Infraestructure.Security.CodeFirstRoleProvider" connectionStringName="BlogUnitOfWork" applicationName="/" />
        <add applicationName="/" name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider" />
      </providers>
    </roleManager>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
        <add namespace="Combres" />
        <add namespace="Combres.Mvc" />
      </namespaces>
    </pages>
    <httpRuntime maxRequestLength="10000" relaxedUrlToFileSystemMapping="true" />
    <globalization enableClientBasedCulture="true" uiCulture="auto" culture="auto" />
    <!-- We store the cache profiles un this section. Name, duration (seconds) where to store and the noStore parameter for inform proxy servers to not store permanent-->
    <caching>
      <outputCacheSettings>
        <outputCacheProfiles>
          <add name="Cache1Hour" duration="3600" varyByParam="none" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
    <httpHandlers>
      <add path="*.less" verb="GET" type="dotless.Core.LessCssHttpHandler, dotless.Core" />
    </httpHandlers>
  </system.web>
  <system.webServer>
    <staticContent>
      <!-- This would tell the browser now to even check for new content on anything static for 90 days -->
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="90.00:00:00" />
    </staticContent>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <httpErrors errorMode="Custom">
      <!-- Catch 404 due to IIS request filtering (e.g. bin, web.config, app_code, app_Global, app_localresources, app_webreferences, app_data, app_browsers) -->
      <error statusCode="404" subStatusCode="8" path="/notfound" responseMode="ExecuteURL" />
    </httpErrors>
    <handlers>
      <add name="dotless" path="*.less" verb="GET" type="dotless.Core.LessCssHttpHandler,dotless.Core" resourceType="File" preCondition="" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="dotless.Core" publicKeyToken="96b446c9e63eae34" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.1.0" newVersion="1.2.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <!-- For the specified location, allow the browser to upload up to 50 MB. For another location reference to httpRunTime  -->
  <location path="File/FileUpload">
    <system.web>
      <httpRuntime maxRequestLength="50000" />
    </system.web>
  </location>
  <dotless minifyCss="false" cache="true" web="false" />
  <combres definitionUrl="~/App_Data/combres.xml" />
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
</configuration>