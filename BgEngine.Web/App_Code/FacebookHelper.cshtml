@*==============================================================================
 This file is part of BgEngine.

 BgEngine is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 BgEngine is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with BgEngine. If not, see <http://www.gnu.org/licenses/>.
==============================================================================
 Copyright (c) 2011 Yago Pérez Vázquez
 Version: 1.0
==============================================================================*@

@using System.Web.WebPages.Scope;

@functions {

    private static readonly object _language = new object();
    private static readonly object _appIdKey = new object();
    private static readonly object _appSecretKey = new object();
    private static readonly object _isInitializedKey = new object();
    
    public static string Language
    {
        get
        {
            return (string)(ScopeStorage.CurrentScope[_language] ?? "es_ES");
        }

        set
        {
            ScopeStorage.CurrentScope[_language] = value;
        }
    }
    public static string AppId
    {
        get
        {
            return (string)(ScopeStorage.CurrentScope[_appIdKey] ?? "");
        }

        set
        {
            ScopeStorage.CurrentScope[_appIdKey] = value;
        }
    }

    public static string AppSecret
    {
        get
        {
            return (string)(ScopeStorage.CurrentScope[_appSecretKey] ?? "");
        }

        set
        {
            ScopeStorage.CurrentScope[_appSecretKey] = value;
        }
    }
    
    public static bool IsInitialized
    {
        get
        {
            return (bool)(ScopeStorage.CurrentScope[_isInitializedKey] ?? false);
        }

        private set
        {
            ScopeStorage.CurrentScope[_isInitializedKey] = value;
        }
    }
    ///<summary>
    /// Initialize the helper with your Facebook application settings.
    ///</summary>
    ///<param name="appId">Facebook application id.</param>        
    ///<param name="appSecret">Facebook application secret.</param>   
    ///<param name="membershipDBName">Name of the database used for storing the membership data.</param>   
    public static void Initialize(string appId, string appSecret, string membershipDbName = "")
    {
        AppId = appId;
        AppSecret = appSecret;
        IsInitialized = true;
    }

}

@*
Summary: 
  Initialize the Facebook JavaScript SDK to be able to support the XFBML tags of the social plugins.
*@
@helper GetInitializationScripts() {
    <div id="fb-root"></div>
    <script type="text/javascript">
        window.fbAsyncInit = function () {
            FB.init({ appId: '@AppId', status: true, cookie: true, xfbml: true });
        };
        (function () {
            var e = document.createElement('script'); e.async = true;
            e.src = document.location.protocol +
            '//connect.facebook.net/@(Language)/all.js';
            document.getElementById('fb-root').appendChild(e);
        } ());

        function loginRedirect(url) { window.location = url; }
    </script>
}

@*
Summary:
    Use this method inside your opening HTML tag for W3C compatibility.
        For example: <html xmlns="http://www.w3.org/1999/xhtml" @Facebook.FbmlNamespaces()>         
*@
@helper FbmlNamespaces() {
	<text>xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://opengraphprotocol.org/schema/"</text> }


@*
Summary:
  Shows a Facebook Like Button. When the user clicks the Like button on your site, a story appears in the user's friends' News Feed with a link back to your website.

Parameter: href
    The URL to like.
Parameter: buttonLayout
    The button layout:
        - standard: Displays social text to the right of the button and friends' profile photos below. 
            Minimum width: 225 pixels. Default width: 450 pixels. Height: 35 pixels (without photos) or 80 pixels (with photos). 
        - button_count: Displays the total number of likes to the right of the button. 
            Minimum width: 90 pixels. Default width: 90 pixels. Height: 20 pixels.
Parameter: showFaces
    Specifies whether to display profile photos below the button (standard layout only).
Parameter: width
    The width of the Like button.
Parameter: height
    The height of the plugin in pixels.
Parameter: action
    The verb to display on the button: 'like', 'recommend'. 
Parameter: font
    The font to display in the button: 'arial', 'lucida grande', 'segoe ui', 'tahoma', 'trebuchet ms', 'verdana'.
Parameter: colorScheme
    The color scheme for the like button: 'light' or 'dark'.
Parameter: refLabel
    A label for tracking referrals; must be less than 50 characters and can contain alphanumeric characters and some punctuation (currently +/=-.:_).
    
*@
@helper LikeButton(
            string href = "",
            string buttonLayout = "button_count",
            bool showFaces = true,
            int width = 450,
            int height = 80,
            string action = "like",
            string font = "",
            string colorScheme = "light",
            string refLabel = ""
            ) {    
    if (href.IsEmpty()) {
        href = Request.Url.ToString();
	}
        
    <iframe src="http://www.facebook.com/plugins/like.php?href=@href&layout=@buttonLayout&show_faces=@showFaces&width=@width&action=@action&colorscheme=@colorScheme&height=@height&font=@font&locale=@Language&ref=@refLabel" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:@(width)px; height:@(height)px;" allowTransparency="true"></iframe>
}

@*
Summary:
  Shows a Facebook Login Button, without integrating Facebook login with your site membership.

Parameter: buttonText
    Specifies the Login Button Text.
Parameter: autoLogoutLink
    When set to true, if the user is logged into Facebook the button will display a logout button instead.
Parameter: size
    The button size: "small", "medium", "large", "xlarge".
Parameter: length
    The text lenght: "long" --> 'Connect with Facebook" or "short" --> 'Connect'
Parameter: onLogin
    Specifies the JavaScript action to execute after the user login. 
Parameter: showFaces
    Whether to display profile photos below the button.
Parameter: extendedPermissions
    The extendedPermissions parameter can be used to request extended permissions from the user. For example, if you want to incorporate a user's photos into your application, set this value to “user_photos”.
*@
@helper LoginButtonTagOnly(
    string buttonText = "",
    bool autoLogoutLink = false,
    string size = "long",
    string length = "short",
    string onLogin = "",
    bool showFaces = false,
    string extendedPermissions = "") {
    <fb:login-button autologoutlink="@autoLogoutLink" size="@size" length="@length" onlogin="@onLogin" show-faces="@showFaces" perms="@extendedPermissions">@buttonText</fb:login-button>
}

@*
Summary:
    Shows a Facebook Comments plugin.
    The Comments Box easily enables your users to comment on your site's content — whether it's for a web page, article, photo, or other piece of content. 
    Then the user can share the comment on Facebook on their Wall and in their friends' streams.
    An 'Administer Comments' link will appear below the 'Post' button for developers of the application.

Parameter: xid
    An id associated with the comments object (defaults to URL-encoded page URL).
Parameter: width
    The width of the plugin, in pixels.
Parameter: numPosts
    The number of comments to display, or 0 to hide all comments. 
Parameter: reverse
    Changes the order of comments and comment area to allow greater customization.
Parameter: removeRoundedBox
    Removes the rounded box around the text area where comments are written to allow greater customization.
*@
@helper Comments(
            string xid = "", 	
            int width = 550,
            int numPosts = 10,
            bool reverseOrder = false,
            bool removeRoundedBox = false) {
    <fb:comments @if (!xid.IsEmpty()) { <text>xid="@xid"</text> }numposts="@numPosts" width="@width" reverse="@reverseOrder" simple="@removeRoundedBox" ></fb:comments>
}

@*
Summary:
    Shows a Facebook Recommendations plugin. The Recommendations plugin shows personalized recommendations to your users.
    Since the content is hosted by Facebook, the plugin can display personalized recommendations whether or not the user has logged into your site.
    To generate the recommendations, the plugin considers all the social interactions with URLs from your site.
    For a logged in Facebook user, the plugin will give preference to and highlight objects her friends have interacted with.
    
    *NOTE*: This helper method requires that your site is published into a public address where others can use it. Check this tutorial on publishing with WebMatrix: http://www.asp.net/webmatrix/tutorials/publish-a-website 

Parameter: site
    The address of your published site. For example "www.fourthcoffee.com"
Parameter: width
    The width of the plugin in pixels.
Parameter: height
    The height of the plugin in pixels.
Parameter: showHeader
    Whether to show a 'Recommendations' title bar.
Parameter: colorScheme
    The color scheme of the plugin: 'light' or 'dark'.
Parameter: font
    The font name for the plugin.
Parameter: borderColor
    The border color of the plugin. Use common color names as Red, White, Black, and so on.
Parameter: filter
    Allows you to filter which URLs are shown in the plugin. The plugin will only include URLs which contain the filter term in the first two path parameters of the URL.
Parameter: refLabel
    A label for tracking referrals; must be less than 50 characters and can contain alphanumeric characters and some punctuation (currently +/=-.:_).
*@
@helper Recommendations(
            string site = "",
            int width = 300,
            int height = 300,
            bool showHeader = true,
            string colorScheme = "light",
            string font = "",
            string borderColor = "",
            string filter = "",
            string refLabel = ""
    ) {	
    if (site.IsEmpty()) {
        site = Request.Url.Host;
	}
        
    <iframe src="http://www.facebook.com/plugins/recommendations.php?site=@site&width=@width&height=@height&header=@showHeader&colorscheme=@colorScheme&font=@font&border_color=@borderColor&filter=@filter&ref=@refLabel&locale=@Language" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:@(width)px; height:@(height)px;" allowTransparency="true"></iframe>
}

@*
Summary:
    Shows a Facebook Like Box. The Like Box is a social plugin that enables Facebook Page owners to attract and gain Likes from their own website.
    The Like Box enables users to:
		- See how many users already like this page, and which of their friends like it too
		- Read recent posts from the page
		- Like the page with one click, without needing to visit the page   

Parameter: href
    The URL of the Facebook Page for this Like box.
Parameter: width
    The width of the plugin in pixels.
Parameter: height
    The height of the plugin in pixels.
Parameter: colorScheme
    The color scheme of the plugin: 'light' or 'dark'.
Parameter: connections
    Number of shown users who have liked this Page. Use 0 to avoid showing the users box.
Parameter: showStream
    Shows the profile stream for the public profile of the page. 
Parameter: showHeader
    Shows the 'Find us on Facebook' bar at top. Only shown when either stream or connections are present.
*@
@helper LikeBox(
			string href,
			int width = 292,
            int height = 587,
            string colorScheme = "light",
			int connections = 10,
			bool showStream = true,
			bool showHeader = true) {                
    <iframe src="http://www.facebook.com/plugins/likebox.php?href=@href&width=@width&height=@height&colorscheme=@colorScheme&connections=@connections&stream=@showStream&header=@showHeader&locale=@Language" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:@(width)px; height:@(height)px;" allowTransparency="true"></iframe>                
}

@*
Summary:
    Shows a Facebook Facepile plugin.
    The Facepile plugin shows the Facebook profile pictures of the user's friends who have already signed up for your site. 
    The plugin doesn't show up if the user is logged out of Facebook or doesn't have friends who have signed up for your site using Facebook.

Parameter: maxRows
    The maximum number of rows of profile pictures to show. The plugin dynamically sizes its height; for example, if you specify a maximum of four rows, and there are only enough friends to fill two rows, the height of the plugin will be only what is needed for two rows of profile pictures. 
Parameter: width
    The width of the plugin in pixels. 
*@
@helper Facepile(
			int maxRows = 1,
			int width = 200) {
	<fb:facepile max-rows="@maxRows" width="@width"></fb:facepile>
}

@*
Summary:
    Shows a Facebook Activity Feed plugin.    
    The Activity Feed plugin displays the most interesting recent activity taking place on your site. Since the content is hosted by Facebook, 
    the plugin can display personalized content whether or not the user has logged into your site. The activity feed displays stories both when 
    users like content on your site and when users share content from your site back to Facebook.
    
    *NOTE*: This helper method requires that your site is published into a public address where others can use it. Check this tutorial on publishing with WebMatrix: http://www.asp.net/webmatrix/tutorials/publish-a-website 

Parameter: site
    The address of your published site. For example "www.fourthcoffee.com"
Parameter: width
    The width of the plugin in pixels.
Parameter: height
    The height of the plugin in pixels.
Parameter: showHeader
    Show the 'Recent Activity' title bar.
Parameter: colorScheme
    The color scheme of the plugin: 'light' or 'dark'.
Parameter: font
    The font name for the plugin.
Parameter: borderColor
    The border color of the plugin. Use common color names as Red, White, Black, and so on.
Parameter: showRecommendations
    Whether to show recommendations on the activity feed.
*@
@helper ActivityFeed(
            string site = "",
            int width = 300,
            int height = 300,
            bool showHeader = true,
            string colorScheme = "light",
            string font = "",
            string borderColor = "",
            bool showRecommendations = false) {
    if (site.IsEmpty()) {
        site = Request.Url.Host;
	}
                
    <iframe src="http://www.facebook.com/plugins/activity.php?site=@site&width=@width&height=@height&header=@showHeader&colorscheme=@colorScheme&font=@font&border_color=@borderColor&recommendations=@showRecommendations&locale=@Language" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:300px; height:300px;" allowTransparency="true"></iframe>
}

