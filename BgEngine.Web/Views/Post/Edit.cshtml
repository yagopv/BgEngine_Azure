@*==============================================================================
 This file is part of BgEngine.

 BgEngine is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 BgEngine is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with BgEngine. If not, see <http://www.gnu.org/licenses/>.
==============================================================================
 Copyright (c) 2011 Yago Pérez Vázquez
 Version: 1.0
==============================================================================*@

@model BgEngine.Domain.EntityModel.Post
		   
@using Combres.Mvc;

@{
	Layout = "~/Views/Shared/_Layout_Admin.cshtml";
	ViewBag.Title = Resources.AppMessages.Post + " - " + Resources.AppMessages.Edit;
}

@Html.CombresLink("CreatePostCss")
<script src="@Url.Content("~/Scripts/tiny_mce/tiny_mce.js")" type="text/javascript"></script>
@Html.CombresLink("CreatePostJs")

<script type="text/javascript">
	$(document).ready(function () {
		$.create_post_startup("@Url.RouteUrl("Default", new { controller="Image", action="ShowAllImages"})"
							 ,"@Url.Content(BgEngine.Application.ResourceConfiguration.BgResources.Folders_NoImage)")

	});
</script>

@using (Html.BeginForm()) {    
	<fieldset>
		@Html.AntiForgeryToken()
		@Html.ValidationSummary(true)
		<legend>@String.Format(Resources.AppMessages.Localization_Edit,Model.Title)</legend>
		 <div id="image-selector" class="ui-helper-display-inline-block ui-helper-margin ">
			<div>
				@if ((Model.Image != null) && (!String.IsNullOrEmpty(Model.Image.ThumbnailPath)))
				{                
					<img src="@Url.Content(Model.Image.ThumbnailPath)" class="ui-helper-thumbnail"/>
				}
				else if ((Model.Image != null) && (!String.IsNullOrEmpty(Model.Image.Path)))
				{   
					<img src="@Url.Content(Model.Image.Path)" class="ui-helper-thumbnail"/>                 
				}
				else
				{
					<img src="@Url.Content(BgEngine.Application.ResourceConfiguration.BgResources.Folders_NoImage)" class="ui-helper-thumbnail"/>
				}				
			</div>
			<div class="ui-helper-padding">
				<a href="#" title="@Resources.AppMessages.Post_Edit_Image" id="select-image" class="bg-panel bg-button-edit-no-text ui-helper-width-2pc ui-helper-float-left tooltip"></a>
				<a href="#" title="@Resources.AppMessages.Post_Cancel_Edit_Image" id="cancel-image" class="bg-panel bg-button-delete-no-text ui-helper-width-2pc ui-helper-float-right tooltip"></a>
			</div>
		</div>
		@Html.HiddenFor(model => model.PostId)
		@Html.HiddenFor(model => model.ImageId)
		@Html.HiddenFor(model => model.DateCreated)
		@Html.HiddenFor(model => model.Visits)
		<table class="table-template">
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Title)
					</div>
				</td>
				<td>
					<div class="editor-field">
						@Html.EditorFor(model => model.Title)
						@Html.ValidationMessageFor(model => model.Title)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Description)
					</div>
				</td>
				<td>
					<div class="editor-field">
						@Html.EditorFor(model => model.Description, new { @class = "mceNoEditor" })
						@Html.ValidationMessageFor(model => model.Description)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Code)
					</div>
				</td>
				<td>
					<div class="editor-field">
						@Html.EditorFor(model => model.Code)
						@Html.ValidationMessageFor(model => model.Code)
					</div>
				</td>
			</tr>
			<tr>
				<td>                    
					<div class="editor-label">
						@Html.LabelFor(model => model.IsPublic)
					</div>
				</td>
				<td>                    
					<div class="editor-field">
						@Html.CheckBoxFor(model => model.IsPublic)
						@Html.ValidationMessageFor(model => model.IsPublic)
					</div>
				</td>
			</tr>
		  <tr>
				<td>                    
					<div class="editor-label">
						@Html.LabelFor(model => model.IsHomePost)
					</div>
				</td>
				<td>                    
					<div class="editor-field">
						@Html.CheckBoxFor(model => model.IsHomePost)
						@Html.ValidationMessageFor(model => model.IsHomePost)
					</div>
				</td>
			</tr>
		  <tr>
				<td>                    
					<div class="editor-label">
						@Html.LabelFor(model => model.IsPostCommentsClosed)
					</div>
				</td>
				<td>                    
					<div class="editor-field">
						@Html.CheckBoxFor(model => model.IsPostCommentsClosed)
						@Html.ValidationMessageFor(model => model.IsPostCommentsClosed)
					</div>
				</td>
			</tr>
		  <tr>
				<td>                    
					<div class="editor-label">
						@Html.LabelFor(model => model.AllowAnonymousComments)
					</div>
				</td>
				<td>                    
					<div class="editor-field">
						@Html.CheckBoxFor(model => model.AllowAnonymousComments)
						@Html.ValidationMessageFor(model => model.AllowAnonymousComments)
					</div>
				</td>
			</tr>
		  <tr>
				<td>                    
					<div class="editor-label">
						@Html.LabelFor(model => model.IsAboutMe)
					</div>
				</td>
				<td>                    
					<div class="editor-field">
						@Html.CheckBoxFor(model => model.IsAboutMe)
						@Html.ValidationMessageFor(model => model.IsAboutMe)
					</div>
				</td>
			</tr>
			<tr>
				<td>                    
					<div class="editor-label">
						@Html.LabelFor(model => model.Category.CategoryId)
					</div>
				 </td>
				 <td>                   
					<div class="editor-field">
						@Html.DropDownList("CategoryId", String.Empty)
						@Html.ValidationMessageFor(model => model.CategoryId)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.User.UserId)
					</div>
				</td>
				<td>                    
					<div class="editor-field">
						@Html.DropDownList("UserId", String.Empty)
						@Html.ValidationMessageFor(model => model.UserId)
					</div>
				</td>
			</tr>
		</table>
		<div class="ui-helper-margin multiselect ui-helper-margin-top-bottom">
			@foreach (var tag in ViewBag.Tags as IDictionary<int,string>)
			{
				<div class="multiselect-check">
					@if (Model.Tags.Any(t=>t.TagName == tag.Value))
					{
						<input type="checkbox" name="selectedtags" value="@tag.Key" checked="checked"/>
					}
					else
					{
						<input type="checkbox" name="selectedtags" value="@tag.Key"/>
					}
					<span>@tag.Value</span>
				</div>
			}
		</div>
		<div class="ui-helper-margin-top-bottom ui-helper-reset-float">
			@Html.TextAreaFor(model => model.Text, new { @class = "mceEditor" })
			@Html.ValidationMessageFor(model => model.Text)
		</div>
		<p>
			 <input type="submit" value="@Resources.AppMessages.Save" />
			 @Html.RouteLink(Resources.AppMessages.Back_to_List, new { controller = "Post", action = "Index" }, new { @class = "bg-button-back" })
			 @Html.RouteLink(Resources.AppMessages.View_Detail, "Default", new { controller = "Post", action = "GetPostById", id = @Model.PostId }, new { target = "_blank", @class = "bg-button-zoom" })
		</p>
	</fieldset>
}

