@model BgEngine.Domain.EntityModel.Video

@using BgEngine.Domain.Types;

@{
	Layout = "~/Views/Shared/_Layout_Admin.cshtml";
	ViewBag.Title = Resources.AppMessages.Video + " - " + Resources.AppMessages.Create;
}
<script src="@Url.Content("~/Scripts/internal/bg.form.js")" type="text/javascript"></script>
<script type="text/javascript">
	$(document).ready(function () {
		$(".target").children().filter(":input").change(function () {	                              	                
				$.post("@Url.RouteUrl("Default", new { controller = "Video", action = "RenderVideo" })", { Path: $("#Path").val(), Html: $("#Html").val(), VideoType: $(".target .ui-selectmenu-status").text()  },                                              
					function(data, status) {
						if ($("#Html").val() != " ")
						{
							var $response = $(data);
							$(".video-admin-container").html($response);
						}
					}
				)
		});
		$("form").form();
		$(".target textarea").val().change(function () {
			$(this).val() = "text";  
		});
	});
</script>

@using (Html.BeginForm())
{   
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)  
	<fieldset>
		<legend>@Resources.AppMessages.Localization_Create_Video</legend>
		<table class="table-template">
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Name)
					  </div>
				</td>
				<td>
					<div class="editor-field">
						@Html.EditorFor(model => model.Name)
						@Html.ValidationMessageFor(model => model.Name)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Description)
					  </div>
				</td>
				<td>
					<div class="editor-field">
						@Html.EditorFor(model => model.Description)
						@Html.ValidationMessageFor(model => model.Description)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Category.CategoryId)
					  </div>
				</td>
				<td>
					<div class="editor-field">
						@Html.DropDownList("CategoryId", String.Empty)
						@Html.ValidationMessageFor(model => model.CategoryId)
					</div>
				</td>
			</tr>			
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Path)
					  </div>
				</td>
				<td>
					<div class="editor-field target">
						@Html.EditorFor(model => model.Path)
						@Html.ValidationMessageFor(model => model.Path)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.IsPublic)
					  </div>
				</td>
				<td>
					<div class="editor-field">
						@Html.EditorFor(model => model.IsPublic)
						@Html.ValidationMessageFor(model => model.IsPublic)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.Html)
					  </div>
				</td>
				<td>
					<div class="editor-field target">
						@Html.EditorFor(model => model.Html)
						@Html.ValidationMessageFor(model => model.Html)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-label">
						@Html.LabelFor(model => model.VideoType)
					  </div>
				</td>
				<td>
					<div class="editor-field target">
						@Html.DropDownList("VideoType", new SelectList(Enum.GetNames(typeof(VideoType))))
						@Html.ValidationMessageFor(model => model.VideoType)
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div class="editor-field">
						<strong>Video</strong>
					</div>
				</td>
				<td>
                    <div class="video-admin-container video-movie"></div>				
                </td>
			</tr>
		</table>
		<div class="ui-helper-margin multiselect ui-helper-margin-top-bottom">
			@foreach (var tag in ViewBag.Tags as IDictionary<int,string>)
			{                 
				<div class="multiselect-check">
					<input type="checkbox" name="selectedtags" value="@tag.Key" />
					<span>@tag.Value</span>
				</div>
			}
		</div>		
		<p class="ui-helper-margin-top-bottom ui-helper-reset-float">
			<input type="submit" value="@Resources.AppMessages.Create" />
			 @Html.RouteLink(Resources.AppMessages.Back_to_List, new { controller = "Video", action = "Index" }, new { @class = "bg-button-back" })
		</p>
	</fieldset>
}
